import re
import time
import random
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import types
from data.config import admins, botname, vproc
from loader import dp, bot
from filters import IsAdmin, IsChat
from keyboards.inline import AdminMenu
from utils.sqlite import clear_firstname, new_voucher
from utils.messages import myprofile
from utils.other import cTime
 
premis = { 'can_send_messages' : True, 
         'can_send_media_messages' : True,
		 'can_send_polls' : True,
		 'can_send_other_messages' : True,
		 'can_add_web_page_previews' : True,
		 }
 
@dp.message_handler(IsChat(), chat_type='supergroup', content_types=["new_chat_members", "new_chat_title", "left_chat_member", "pinned_message"])
async def deleter1(m: types.Message):
    try:
      await bot.delete_message(m.chat.id, m.message_id)
    except:
      pass
 
@dp.message_handler(IsChat(), IsAdmin(), chat_type='supergroup', commands = ['help'], state="*")
async def chat_help(m: types.Message):
    await bot.delete_message(m.chat.id, m.message_id)
    await m.reply('<b>–í—ã–¥–∞—Ç—å –ø–∞—Ä—Ç–∏—é —á–µ–∫–æ–≤ –≤ —á–∞—Ç–µ:</b>\n5 —á–µ–∫–æ–≤ –ø–æ 2 —Ä—É–±–ª—è <i>vou 5 2</i>\n<b>–î–ª—è —Å–æ–≤–µ—Ä–µ—à–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞–¥–æ –æ—Ç–º–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫:</b>\n–ú—É—Ç –Ω–∞ 30 —Å–µ–∫—É–Ω–¥—É <i>/mut 30s</i>\n–ú—É—Ç –Ω–∞ 1 –º–∏–Ω—É—Ç—É <i>/mut 1m</i>\n–ú—É—Ç –Ω–∞ 1 —á–∞—Å <i>/mut 1h</i>\n–ú—É—Ç –Ω–∞ 1 –¥–µ–Ω—å <i>/mut 1d</i>\n–°–Ω—è—Ç—å –º—É—Ç <i>/mut 0</i>\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —é–∑–µ—Ä–µ <i>/inf</i>', reply=False, parse_mode='html')
 
@dp.message_handler(IsChat(), IsAdmin(), is_reply=True, chat_type='supergroup', commands = ['inf'], state="*")
async def chat_info(m: types.Message):
    try:
      await bot.delete_message(m.chat.id, m.message_id)
    except:
      pass
    txt = await myprofile(m.reply_to_message.from_user.id)
    await m.reply(txt[0], reply=False, parse_mode='html', reply_markup = AdminMenu().chat_ban_kb(str(txt[2]), txt[1]))
	
@dp.message_handler(IsAdmin(), is_reply=True, chat_type='supergroup', commands = ['mut'], state="*")
async def chat_mut(m: types.Message):
    try:
      await bot.delete_message(m.chat.id, m.message_id)
    except:
      pass
    txt = m.text.lower()
    if len(txt.split('/mut ')) == 2:
      tm = txt.split('/mut ')[1]
      if tm != '0':
        if re.search(r'^\d*s$', tm):
          tm = int(tm.split('s')[0])
          s = cTime(tm)
          await m.reply(f'<a href="tg://user?id={m.reply_to_message.from_user.id}">{clear_firstname(m.reply_to_message.from_user.first_name)}</a> –±—É–¥–µ—Ç –º–æ–ª—á–∞—Ç—å <b>0 –î. {s["h"]} –ß. {s["m"]} –ú–∏–Ω. {s["s"]} –°–µ–∫.</b>', reply=False, parse_mode='html')
          await bot.restrict_chat_member(chat_id = m.chat.id, user_id = m.reply_to_message.from_user.id, until_date = int(time.time()) + tm)
        elif re.search(r'^\d*m$', tm):
          tm = int(tm.split('m')[0]) * 60
          s = cTime(tm)
          await m.reply(f'<a href="tg://user?id={m.reply_to_message.from_user.id}">{clear_firstname(m.reply_to_message.from_user.first_name)}</a> –±—É–¥–µ—Ç –º–æ–ª—á–∞—Ç—å <b>0 –î. {s["h"]} –ß. {s["m"]} –ú–∏–Ω. {s["s"]} –°–µ–∫.</b>', reply=False, parse_mode='html')
          await bot.restrict_chat_member(chat_id = m.chat.id, user_id = m.reply_to_message.from_user.id, until_date = int(time.time()) + tm)
        elif re.search(r'^\d*h$', tm):
          tm = int(tm.split('h')[0]) * 3600
          s = cTime(tm)
          await m.reply(f'<a href="tg://user?id={m.reply_to_message.from_user.id}">{clear_firstname(m.reply_to_message.from_user.first_name)}</a> –±—É–¥–µ—Ç –º–æ–ª—á–∞—Ç—å <b>0 –î. {s["h"]} –ß. {s["m"]} –ú–∏–Ω. {s["s"]} –°–µ–∫.</b>', reply=False, parse_mode='html')
          await bot.restrict_chat_member(chat_id = m.chat.id, user_id = m.reply_to_message.from_user.id, until_date = int(time.time()) + tm)
        elif re.search(r'^\d*d$', tm):
          tm = int(tm.split('d')[0]) * 86400
          s = cTime(tm)
          await m.reply(f'<a href="tg://user?id={m.reply_to_message.from_user.id}">{clear_firstname(m.reply_to_message.from_user.first_name)}</a> –±—É–¥–µ—Ç –º–æ–ª—á–∞—Ç—å <b>1 –î.</b>', reply=False, parse_mode='html')
          await bot.restrict_chat_member(chat_id = m.chat.id, user_id = m.reply_to_message.from_user.id, until_date = int(time.time()) + tm)
        else:
          await m.reply('<b>–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ.</b> –ù–∞–¥–æ –ø–∏—Å–∞—Ç—å —Ç–∞–∫:\n–ú—É—Ç –Ω–∞ 30 —Å–µ–∫—É–Ω–¥—É <i>/mut 30s</i>\n–ú—É—Ç –Ω–∞ 1 –º–∏–Ω—É—Ç—É <i>/mut 1m</i>\n–ú—É—Ç –Ω–∞ 1 —á–∞—Å <i>/mut 1h</i>\n–ú—É—Ç –Ω–∞ 1 –¥–µ–Ω—å <i>/mut 1d</i>\n–°–Ω—è—Ç—å –º—É—Ç <i>/mut 0</i>', reply=False, parse_mode='html')
      else:
        await m.reply(f'<a href="tg://user?id={m.reply_to_message.from_user.id}">{clear_firstname(m.reply_to_message.from_user.first_name)}</a> –±—ã–ª –ø–æ–º–∏–ª–æ–≤–∞–Ω –∏ –ø–æ–∫–∞-—á—Ç–æ –º–æ–∂–µ—Ç –ø–∏—Å—Ç—å –≤ —á–∞—Ç–µ.', reply=False, parse_mode='html')
        await bot.restrict_chat_member(chat_id = m.chat.id, user_id = m.reply_to_message.from_user.id, until_date = 0, permissions = premis)
    else:
      await m.reply('<b>–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ.</b> –ù–∞–¥–æ –ø–∏—Å–∞—Ç—å —Ç–∞–∫:\n–ú—É—Ç –Ω–∞ 30 —Å–µ–∫—É–Ω–¥—É <i>/mut 30s</i>\n–ú—É—Ç –Ω–∞ 1 –º–∏–Ω—É—Ç—É <i>/mut 1m</i>\n–ú—É—Ç –Ω–∞ 1 —á–∞—Å <i>/mut 1h</i>\n–ú—É—Ç –Ω–∞ 1 –¥–µ–Ω—å <i>/mut 1d</i>\n–°–Ω—è—Ç—å –º—É—Ç <i>/mut 0</i>', reply=False, parse_mode='html')
		  
@dp.message_handler(IsChat(), IsAdmin(), chat_type='supergroup', regexp="^vou\s+\d*\s+\d*$")
async def chat_voucher(m: types.Message):
    try:
      await bot.delete_message(m.chat.id, m.message_id)
    except:
      pass
    if len(m.text.split(' ')) == 3:
      num = int(m.text.split(' ')[1])
      sum = int(m.text.split(' ')[2])
      keyboard = InlineKeyboardMarkup()
      k = "keyboard.add("
      for x in range(num):
        id = await new_voucher(sum, m.from_user.id, clear_firstname(m.from_user.first_name))
        z = random.randint(1, 100)
        if z > vproc:
          sum = -sum
        k += f"InlineKeyboardButton(text = 'üßæ', url = 'https://t.me/{botname}?start={id}'), "
      k += ')'
      eval(k)
      await m.reply(f'–ü–∞—Ä—Ç–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–µ–∫–æ–≤ –Ω–∞ —Å—É–º–º—É <b>¬± {int(abs(sum))}</b> Super Coin', reply=False, parse_mode='html', reply_markup = keyboard)
    else:
      await m.reply('<b>–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ</b>.\n–ù–∞–¥–æ –ø–∏—Å–∞—Ç—å —Ç–∞–∫:\n5 —á–µ–∫–æ–≤ –ø–æ 2 —Ä—É–±–ª—è <i>vou 5 2</i>', reply=False, parse_mode='html')
		  
@dp.callback_query_handler(IsAdmin(), chat_type='supergroup', text='cancel_chat')
async def cancelerchat(c: types.CallbackQuery):
    try:
      await bot.delete_message(c.message.chat.id, c.message.message_id)
    except:
      pass

@dp.message_handler(IsChat(), chat_type='supergroup', regexp='^/', state="*")
async def deleter(m: types.Message):
    try:
      await bot.delete_message(m.chat.id, m.message_id)
    except:
      pass
	
@dp.callback_query_handler(chat_type='supergroup')
async def noaccess(c: types.CallbackQuery):
    try:
      await c.answer('–≠—Ç–æ –Ω–µ –¥–ª—è —Ç–µ–±—è —É–º–Ω–∏–∫!', show_alert=True)
    except:
      pass